---
eleventyExcludeFromCollections: true
---
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Alpine.js Playground - {{ pkg.description }}" />
    <title>Alpine.js Playground</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@1.x.x/dist/tailwind.min.css"
      rel="stylesheet"
    />
    <script
      src="https://cdn.jsdelivr.net/gh/alpinejs/alpine@2.x.x/dist/alpine.min.js"
      defer
    ></script>
  </head>

  <body class="flex">
    <div x-data="page()" x-init="init()" class="flex mx-auto flex-col items-center px-8 md:px-32 py-24">
      <h2 class="text-xl font-semibold text-gray-900 mb-8">Alpine.js Playground</h2>
      <div class="text-xs text-gray-500 italic mb-4">Last update: <a
        class="text-blue-300 hover:text-blue-600 hover:underline"
        href="{{ commit.url }}"
      >{{ commit.text }}</a>
      </div>
      <p class="mb-4">
        A set of <span x-text="pre()">ready to use Alpine.js</span> <select
          class="inline-block appearance-none bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline"
          x-model="selectedType">
          <template x-for="option in options" :key="option">
            <option :value="option" x-text="option"></option>
          </template>
          <option x-remove value="examples" selected>examples</option>
        </select> <span x-text="post()">with TailwindCSS</span> by <a class="text-blue-500 hover:text-blue-800 hover:underline" href="https://codewithhugo.com/tags/alpinejs">Hugo</a>
      </p>

      <ul class="list-inside mb-8">
        {% for page in collections.all %}
          <li class="list-disc w-full" x-remove>
            <a
              class="text-blue-500 hover:text-blue-800 hover:underline"
              href="{{ page.url }}"
            >{{ page.data.title }}</a>
          </li>
        {% endfor %}
        <template x-for="item in collections[selectedType]">
          <li class="list-disc w-full">
            <a
              class="text-blue-500 hover:text-blue-800 hover:underline"
              :href="item.url"
              x-text="item.title"
            ></a>
          </li>
        </template>
      </ul>

      <form
        action="https://buttondown.email/api/emails/embed-subscribe/alpinejs"
        method="post"
        target="popupwindow"
        onsubmit="window.open('https://buttondown.email/alpinejs', 'popupwindow')"
        class="flex md:w-4/5 md:p-10 flex-col rounded mb-4 embeddable-buttondown-form"
      >
        <label
          class="flex text-gray-700 font-semibold mb-2 text-sm"
          for="bd-email"
        >
          Subscribe to Alpine.js Weekly
        </label>
        <p class="leading-relaxed flex text-sm mb-4">A free, onceâ€“weekly email roundup of Alpine.js news and articles.</p>
        <input
          placeholder="calebporzio@alpinejs.org"
          class="flex mb-2 bg-white focus:outline-none focus:shadow-outline border border-gray-300 rounded-lg py-2 px-4 appearance-none leading-normal"
          type="email"
          name="email"
          id="bd-email"
          required="required"
        />
        <input type="hidden" value="1" name="embed" />
        <input
          class="flex bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
          type="submit"
          value="Subscribe"
        />
      </form>
    </div>
    <script>
      window.__collections = {
        examples: [
          {% for page in collections.all %}
          { url: {{ page.url | dump | safe }}, title: {{ page.data.title | dump | safe }} },
          {% endfor %}
        ],
        components: {{ components | dump | safe }}
      };
    </script>
    <script>

      function page() {
        const search = new URLSearchParams(window.location.search).get('type') || 'examples';
        return {
          selectedType: search,
          options: Object.keys(window.__collections),
          collections: window.__collections,
          pre() {
            switch(this.selectedType) {
              case 'examples':
                return 'ready to use Alpine.js'
              case 'sites':
              case 'tools':
                return 'relevant'
              default:
                return 'Alpine.js'
            }
          },
          post() {
            switch(this.selectedType) {
              case 'examples':
                return 'with TailwindCSS'
              case 'components':
                return 'ready to copy-paste'
              case 'articles':
              case 'demos':
                return 'for your perusal'
              case 'sites':
                return 'built with Alpine.js'
              case 'podcasts':
                return 'ðŸŽ§ for your commute'
              case 'tools':
                return 'to supercharge your Alpine.js dev'
              default:
                return ''
            }
          },
          init() {
            this.$el.querySelectorAll('[x-remove]').forEach(el => el.remove())
          }
        }
      }
    </script>
  </body>
</html>
